trigger:
- none

jobs:
- job: BuildAndTest
  pool:
    vmImage: 'ubuntu-latest'
  steps:
  - checkout: self
  - script: |
      sudo apt-get update -y
      sudo snap install flutter --classic
    displayName: 'Install Flutter'
  - script: |
      flutter --disable-telemetry
      flutter packages get
    displayName: 'Install Dependencies'
  - script: flutter build apk
    displayName: 'Build apk'
  - task: CopyFiles@2
    inputs:
      SourceFolder: '$(Build.SourcesDirectory)/build/app/outputs/flutter-apk'
      Contents: '**/*.apk'
      TargetFolder: '$(Build.ArtifactStagingDirectory)'
    displayName: 'Copy APK to Artifact Staging'
  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)'
      ArtifactName: 'apk'
      publishLocation: 'Container'
    displayName: 'Publish Artifacts'

  - script: |
      sudo apt-get update -y
      sudo apt-get install ca-certificates -y
      sudo apt-get install cpu-checker
      egrep -c '(vmx|svm)' /proc/cpuinfo
      kvm-ok
      
      sudo apt-get install openjdk-8-jdk -y
      export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64/
      echo "JAVA_HOME=$JAVA_HOME" >> $GITHUB_ENV
      export PATH=$JAVA_HOME/bin:$PATH
      echo "PATH=$PATH" >> $GITHUB_ENV

      sudo apt install wget -y
      wget https://dl.google.com/android/repository/sdk-tools-linux-3859397.zip
      unzip sdk-tools-linux-3859397.zip -d android-sdk
      mkdir -p platform-tools
      wget https://dl.google.com/android/repository/platform-tools-latest-linux.zip
      unzip platform-tools-latest-linux.zip -d platform-tools

      sudo mv platform-tools/* android-sdk/

      export ANDROID_HOME=$PWD/android-sdk
      export PATH=$PATH:$ANDROID_HOME/tools
      export PATH=$PATH:$HOME/platform-tools

      yes | $ANDROID_HOME/tools/bin/sdkmanager --licenses
      $ANDROID_HOME/tools/bin/sdkmanager --list
      $ANDROID_HOME/tools/bin/sdkmanager "platforms;android-31"

      # Replace 'system-images;android-30;google_apis;x86' with the correct package name
      $ANDROID_HOME/tools/bin/sdkmanager "system-images;android-31;google_apis;x86_64"
      export ANDROID_SDK_ROOT=$ANDROID_HOME

      # List available AVDs
      $ANDROID_HOME/tools/bin/avdmanager list avd

      $ANDROID_HOME/tools/emulator -list-avds

      # Create an Android Virtual Device (AVD)
      echo "no" | $ANDROID_HOME/tools/bin/avdmanager create avd --name "mytempavd" --package "system-images;android-31;google_apis;x86_64" --tag "google_apis" --force

      $ANDROID_HOME/tools/bin/sdkmanager --list

      # Start the Android emulator in the background and log the output
      $ANDROID_HOME/emulator/emulator -avd mytempavd 

      # Wait for a short time (e.g., 5 minutes) to allow the emulator to start (you can adjust this duration)
      sleep 150

      # Check if the emulator is running
      # if $ANDROID_HOME/platform-tools/adb devices | grep -q emulator; then
      #   echo "Emulator is running."
      # else
      #   echo "Emulator is not running."
      # fi

      # List connected devices
      # $ANDROID_HOME/platform-tools/adb devices 
      $ANDROID_HOME/tools/emulator -list-avds
    displayName: 'Install Android SDK and Run Emulator'

  - script: |
      # Install Node.js (if not already installed)
      sudo apt-get install -y nodejs

      # Install Appium globally
      npm install -g appium
      appium --port 4725 &
      # Install the uiautomator2 driver
      appium driver install uiautomator2
      # Specify the Appium driver to use (uiautomator2)
      # appium --use-driver=uiautomator2
      npm update -g appium
      npm update -g appium-uiautomator2-driver

      # # Start the Appium server in the background
      # appium &
    displayName: 'Install and Start Appium Server'

  - script: |
      # Navigate to your Appium test script directory
      cd $(Build.SourcesDirectory)

      # Install Appium-Python-Client
      python -m pip install Appium-Python-Client
      pip install selenium

      # Run your Appium test script
      python appium_test.py --port 4725
    displayName: 'Run Appium Tests'
